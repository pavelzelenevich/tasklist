Чтобы развернуть проект откройте в браузере файл "registration.php", нажмите кнопку "СОЗДАТЬ БАЗУ С ТАБЛИЦАМИ".
Если по каким-либо причинам этот способ не сработает, то создайте базу данных "task" и откройте в браузере файл migration09.02.2020.php.

Затем зарегистрируйте нового пользователя. Вход в аккаунт после регистрации происходит автоматически.

После этого вас перенаправит на главную страницу ("index.php"), где вы сможете:

-Создать задачу и присвоить ей любой статус на выбор (ToDo/Doing/Done).

-Изменить ее, если задача в статусе ToDo (менять задачи в других статусах нельзя).

-Присвоить задаче со статусом ToDo статус Doing (выполняемой), после этого задача переместится из колонки 1 в колонку 2.

-Добавить комментарии к любой задаче со статусом Doing. (комментарии выводятся без использования SQL JOINов)

-Завершить задачу со статусом Doing, нажав кнопку "Завершить", при этом задаче присвоится статус Done и она переместится в колонку 3. Также в ней сохранятся ранее добавленные комментарии. 

-Выйти из аккаунта нажав на кнопку "ВЫЙТИ" в левом верхнем углу экрана.

-Зайти в аккаунт можно правильно заполнив форму авторизации на странице "autorisation.php" и нажав на кнопку "Войти".

Настроить подключение к базе данных вы сможете в файле "pdo.php".

На странице "index.php" отображается интерфейс списка личных задач.
На странице "addtask.php" происходит добавление задач в базу данных.
На странице "taskObjects.php" лежат классы и создаются экземпляры этих классов.
На странице "createtask.php" находится форма создания новых задач.
На странице "update.php" находится форма изменения созданных задач.
На странице "createDB.php" создается база данных "task".
На странице "pdo.php" подключение настройки подключения к базе данных.
На странице "migration09.02.2020.php" создаются таблицы todo, doing, done, comments, users в базе данных "task".
На странице "registration.php" форма регистрации новых пользователей.
На странице "reg.php" скрипт добавления новых пользователей в таблицу users.
На странице "autorisation.php" форма аутентификации зарегистрированных пользователей. 
На странице "auth.php" скрипт аутентификации.
На странице "checkEmail.php" проверка уникальности E-mail при регистрации нового пользователя (вызывается посредством AJAX со страницы "registration.php").
На странице "script.js" находится скрипт проверки валидности заполняемых при регистрации полей и уникальности E-mail.
На странице "scriptAuth.js" находится скрипт проверки валидности заполняемых при авторизации полей.
В файле "style.css" находятся добавляемые скриптами стили полей ввода.